% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createAtomicCodeCountsTable.R
\name{createAtomicCodeCountsTable}
\alias{createAtomicCodeCountsTable}
\title{Create atomic code counts table}
\usage{
createAtomicCodeCountsTable(
  CDMdbHandler,
  domains = NULL,
  codeAtomicCountsTable = "code_atomic_counts"
)
}
\arguments{
\item{CDMdbHandler}{A CDMdbHandler object that contains database connection details}

\item{domains}{Optional data frame defining domains to process. If NULL, uses standard OMOP domains}

\item{codeAtomicCountsTable}{Name of the atomic counts table to create. Defaults to "code_atomic_counts"}
}
\value{
Nothing. Creates a table called 'code_atomic_counts' in the results schema with columns:
\itemize{
\item \code{concept_id} - The OMOP concept ID
\item \code{maps_to_concept_id} - The mapped concept ID
\item \code{calendar_year} - The year of the events
\item \code{gender_concept_id} - The gender concept ID
\item \code{age_decile} - The age decile (0-9, 10-19, etc.)
\item \code{event_counts} - Number of events for this code
}
}
\description{
Creates a table containing atomic-level counts of codes by concept, year, gender and age decile.
This function processes each domain separately and creates a comprehensive table with event counts
for individual concepts before aggregation.
}
\examples{
\dontrun{
# Create atomic code counts table for all domains
createAtomicCodeCountsTable(CDMdbHandler)

# Create atomic code counts table with custom domain configuration
custom_domains <- tibble::tribble(
  ~domain_id, ~table_name, ~concept_id_field, ~date_field, ~maps_to_concept_id_field,
  "Condition", "condition_occurrence", "condition_concept_id", "condition_start_date", "condition_concept_id"
)
createAtomicCodeCountsTable(CDMdbHandler, domains = custom_domains)
}
}
